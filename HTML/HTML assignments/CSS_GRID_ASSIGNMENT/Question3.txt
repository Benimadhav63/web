Q3) Explain the use of grid-auto-row and grid-auto-column using code examples.
Ans3) The grid-auto-rows property sets a size for the rows in a grid container.
This property affects only rows with the size not set.

CSS Syntax
grid-auto-rows: auto|max-content|min-content|length;

Property Values
Value		Description	
auto		Default value. The size of the rows is determined by the size of the largest item in the row	
max-content	Sets the size of each row to depend on the largest item in the row	
min-content	Sets the size of each row to depend on the smallest item in the row	
length		Sets the size of the rows, by using a legal length value.

Code Example

<!DOCTYPE html>
<html>
<head>
<style>
.item1 { grid-area: 1 / 1 / 2 / 2; }
.item2 { grid-area: 1 / 2 / 2 / 3; }
.item3 { grid-area: 1 / 3 / 2 / 4; }
.item4 { grid-area: 2 / 1 / 3 / 2; }
.item5 { grid-area: 2 / 2 / 3 / 3; }
.item6 { grid-area: 2 / 3 / 3 / 4; }
.grid-container {
  display: grid;
  grid-auto-rows: 150px;
  grid-gap: 10px;
  background-color: #2196F3;
  padding: 10px;
}
.grid-container > div {
  background-color: rgba(255, 255, 255, 0.8);
  text-align: center;
  padding: 20px 0;
  font-size: 30px;
}
</style>
</head>
<body>
<h1>The grid-auto-rows Property</h1>
<p>Use the <em>grid-auto-rows</em> property to set a default size (height) for all rows.</p>
<p>Set the size to 150 pixels per row:</p>
<div class="grid-container">
  <div class="item1">1</div>
  <div class="item2">2</div>
  <div class="item3">3</div>  
  <div class="item4">4</div>
  <div class="item5">5</div>
  <div class="item6">6</div>
</div>
<p><strong>Note:</strong> The grid-template-rows property overrides this property.</p>
</body>
</html>


Grid-auto-column:-The grid-auto-columns property sets a size for the columns in a grid container.
This property affects only columns with the size not set.

CSS Syntax
grid-auto-columns: auto|max-content|min-content|length;

Property Values
Value		Description	
auto		Default value. The size of the columns is determined by the size of the container	
fit-content()	 	 
max-content	Sets the size of each column depending on the largest item in the column	
min-content	Sets the size of each column depending on the smallest item in the column	
minmax(min.max)	Sets a size range greater than or equal to min and less than or equal to max	 
length		Sets the size of the columns, by using a legal length value. Read about length units	
%		Sets the size of the columns, by using a percent value


Code example:-
<!DOCTYPE html>
<html>
<head>
<style>
.item1 { grid-area: 1 / 1 / 2 / 2; }
.item2 { grid-area: 1 / 2 / 2 / 3; }
.item3 { grid-area: 1 / 3 / 2 / 4; }
.item4 { grid-area: 2 / 1 / 3 / 2; }
.item5 { grid-area: 2 / 2 / 3 / 3; }
.item6 { grid-area: 2 / 3 / 3 / 4; }
.grid-container {
  display: grid;
  grid-auto-columns: 50px;
  grid-gap: 10px;
  background-color: #2196F3;
  padding: 10px;
}
.grid-container > div {
  background-color: rgba(255, 255, 255, 0.8);
  text-align: center;
  padding: 20px 0;
  font-size: 30px;
}
</style>
</head>
<body>
<h1>The grid-auto-columns Property</h1>
<p>Use the <em>grid-auto-columns</em> property to set a default size (width) for all columns.</p>
<p>Set the size to 50 pixels per column:</p>
<div class="grid-container">
  <div class="item1">1</div>
  <div class="item2">2</div>
  <div class="item3">3</div>  
  <div class="item4">4</div>
  <div class="item5">5</div>
  <div class="item6">6</div>
</div>
<p><strong>Note:</strong> The grid-template-columns property overrides this property.</p>
</body>
</html>